{"version":3,"sources":["dibgram/messenger/message/ui/syntax-highlighting.tsx"],"names":["SyntaxHighLighting","children","lang","dark","language","style","stackoverflowDark","stackoverflowLight","CodeTag","Fragment"],"mappings":"0HAAA,8GAae,SAASA,EAAT,GAA2F,IAA9DC,EAA6D,EAA7DA,SAAUC,EAAmD,EAAnDA,KAAMC,EAA6C,EAA7CA,KACxD,OACI,cAAC,IAAD,CAAmBC,SAAUF,EAAMG,MAAOF,EAAMG,IAAoBC,IAAoBC,QAAU,gBAAEP,EAAF,EAAEA,SAAF,OAAe,cAAC,IAAMQ,SAAP,UAAiBR,KAAlI,SACKA","file":"static/js/4.01761e21.chunk.js","sourcesContent":["import React from 'react';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\n//eslint-disable-next-line @typescript-eslint/ban-ts-comment\n//@ts-ignore\nimport { stackoverflowDark, stackoverflowLight } from 'react-syntax-highlighter/dist/esm/styles/hljs';\nimport './syntax-highlighting.scss';\n\ntype SyntaxHighlightingProps = {\n    children: string;\n    lang: string;\n    dark: boolean;\n}\n\nexport default function SyntaxHighLighting({children, lang, dark}: SyntaxHighlightingProps): JSX.Element {\n    return (\n        <SyntaxHighlighter language={lang} style={dark? stackoverflowDark : stackoverflowLight} CodeTag={(({children})=> <React.Fragment>{children}</React.Fragment>) as typeof React.Fragment}>\n            {children}\n        </SyntaxHighlighter>\n    );\n}"],"sourceRoot":""}